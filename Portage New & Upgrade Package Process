# 确定一切都正常工作
(outside)
$ cd r96
$ cros_sdk

修改路径文件后记得应用
$ source ~/.profile

# Updating previously created upstream cache at /tmp/portage.
(inside)
git remote set-url origin https://chromium.googlesource.com/external/github.com/gentoo/gentoo.git in /tmp/portage
(inside)
git config remote.origin.fetch +refs/heads/master:refs/remotes/origin/master in /tmp/portage
(inside)
git remote update in /tmp/portage

# Fetching origin
(inside)
git checkout -f origin/master in /tmp/portage

(inside)
 cd ~/trunk/src/third_party/portage-stable

# Running with board amd64-openfyde
(inside)
setup_board --board=amd64-openfyde --force

(inside)
git status -s in /mnt/host/source/src/third_party/portage-stable

(inside)
$ cros_portage_upgrade --verbose --upgrade --unstable-ok --board=amd64-openfyde net-p2p/kubo

# ##############################手动安装gentoo软件包###############
# 强制更新包
sudo emerge -GO `qlist -IC glibc zlib`
# git抛弃本地更改文件
git clean -nxdf（查看要删除的文件及目录，确认无误后再使用下面的命令进行删除）
git checkout . && git clean -xdf

# 复制gentoo软件包文件夹到 ~/r96/openfyde/overlays/project-openfyde/ 下例如 net-p2p/kubo
emerge-amd64-openfyde --search net-p2p/kubo
emerge-amd64-openfyde --ask net-p2p/kubo

# 检查此软件包可能还需要什么其他依赖（-pv 代表 --pretend --verbose）
sudo emerge -pv net-p2p/kubo
# 直接安装
sudo emerge net-p2p/kubo
# 查看更新然后更新
sudo emerge -puv world 
sudo emerge -uv world 

# 缺少 acct-group/ipfs 和 acct-user/ipfs 
# 复制这2个文件夹到 ~/r96/openfyde/overlays/project-openfyde/ 下 

emerge-amd64-openfyde --search acct-group/ipfs 
emerge-amd64-openfyde --ask acct-group/ipfs 

emerge-amd64-openfyde --search acct-user/ipfs 
emerge-amd64-openfyde --ask acct-user/ipfs 

# 复制eclass文件到以下位置 ~/r96/openfyde/overlays/fyde-eclass/eclass
acct-group.eclass
acct-user.eclass

# 重新设置 setup_board
setup_board --board=amd64-openfyde --force

# 更新整个系统
emerge --update @world && emerge @modue-rebuild && emerge @preserved-rebuild

#更新安装所有 emerge 包，并提示错误
sudo emerge -u @system


# 安装包到全局 
sudo emerge-amd64-openfyde -puv net-p2p/kubo
sudo emerge-amd64-openfyde -uv net-p2p/kubo

# 删除chroot里安装的软件包 源文件保留
emerge-amd64-openfyde --unmerge net-p2p/kubo

# 如何检查我的包是否存在于下载镜像中？
emerge-amd64-openfyde -F --unmerge net-p2p/kubo

# 包依赖关系您可以在 chroot 中使用它
emerge-amd64-openfyde kubo-0.14.0-r1.ebuild compile

#使用本地编好的包，没有就下源码(尽量避免编译)
emerge-amd64-openfyde --usepkg net-p2p/kubo

# 升级内核
FEATURES="noclean" cros_workon --board=amd64-openfyde start chromeos-kernel-5_10
FEATURES="noclean" cros_workon_make --board=amd64-openfyde --install chromeos-kernel-5_10

# 升级包
cros_portage_upgrade --upgrade --board=amd64-openfyde net-p2p/kubo

# 升级chrome版本
repo init -u https://chromium.googlesource.com/chromiumos/manifest.git --repo-url https://chromium.googlesource.com/external/repo.git -b release-R102-14695.B


##############################################################

# 如何安装单个软件包（没有 gmerge）使用以下命令从文件或 U 盘挂载映像：
./mount_gpt_image.sh

进入已安装的系统：
emerge-amd64-openfyde -k --root=/tmp/m net-p2p/kubo

# 如何修改一个portage包？
在 ChromiumOS 中，portage 存储库被认为是只读的。这意味着如果 portage 包有问题，那么我们必须在chromiumos-overlay中为它创建一个覆盖。
需要这样做的一个常见原因是包不会交叉编译（对于 ARM 或 x86）。以下是如何做到这一点：
注意：您必须emerge-${BOARD}在 chroot 内部运行，但 repo and git 命令应该在 chroot 外部执行。
1.(cros-chroot) $ emerge-amd64-openfyde net-p2p/kubo
2.确保你有来自 gentoo 的最新版本的 portage。
$ cd ...src/third_party/portage-stable
$ git checkout remotes/cros/gentoo
$ ls net-p2p/kubo
3.用于repo start开始修改 chromiumos-overlay
cd ...src/third_party/chromiumos-overlay/
repo start add-net-p2p-kubo-to-overlay .
4.把这个包复制到chromiumos-overlay中对应的地方
mkdir net-p2p
cp -r ../portage-stable/net-p2p/kubo/ net-p2p/
我们要使用最新的 ebuild，所以删除其他的
cd net-p2p/kubo
rm kubo-0.14.0-1.1* kubo-0.14.0-1.2.0*

5.将此更改上传到审核服务器并完成整个过程以使其提交
git commit
### 从 portage 导入 kubo
### TEST=emerge，虽然它实际上并没有构建
git cl upload
### ... 等待审核
### git推送
6.用于repo start开始修改新的覆盖包
cd ...src/third_party/chromiumos-overlay/
repo start fix-kubo

7.添加补丁并修改 ebuild 以使用它
# 查找或创建补丁，将其放在文件目录中# 修改ebuild，例如cross-compile.patch 
src_prepare() {
    epatch "${FILESDIR}"/${PN}-1.1.4-mtab-sym.patch
    epatch "${FILESDIR}"/${PN}-1.1.4-no-exec.patch

### 这是新的
    epatch "${FILESDIR}"/${PN}-1.1.4-cross-compile.patch
}

8.检查它现在是否可以构建
(cros-chroot) $ emerge-amd64-openfyde kubo

9. 将此更改上传到审核服务器并完成整个过程以使其提交
git commit
### 修改kubo 以使其构建
### TEST=emerge-amd64-openfyde

git cl upload

### ...等待审核
### git推送

# 修改Chrome OS launcher
chrome://flags

chrome://flags#productivity-launcher
App Launcher flag and select “Enabled“
游戏
chrome://flags/#launcher-game-search
重新排序
chrome://flags/#productivity-reorder-apps
排序Play Store Search 
chrome://flags/#launcher-play-store-search

